# -*- coding: utf-8 -*-
"""Portafolio Cuanti.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KACcrNMDYONGQK16_UnfcnfaJQ7THFia
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import statsmodels.api as sm
from statsmodels.formula.api import ols

Presion_Extrusion = [8500, 8700, 8900, 9100]
Lotes_Resina = [1, 2, 3, 4, 5, 6]
Rendimiento = [[90.3, 92.5, 85.5, 82.5],
               [89.2, 89.5, 90.8, 89.5],
               [98.2, 90.6, 89.6, 85.6],
               [93.9, 94.7, 86.2, 87.4],
               [87.4, 87, 88, 78.9],
               [97, 95.8, 93.4, 90.7]]

df = pd.DataFrame({
    'presion_extrusion': Presion_Extrusion * 6,
    'Lote_resina': [i for i in Lotes_Resina for _ in range(4)],
    'Rendimiento': [j for sublist in Rendimiento for j in sublist]
})

model = ols('Rendimiento ~ C(presion_extrusion) + C(Lote_resina)', data = df).fit()
anova_table = sm.stats.anova_lm(model, typ = 2)
print(anova_table)

!pip install bioinfokit

from bioinfokit.analys import stat
res = stat()
res.anova_stat(df=df, res_var='Rendimiento', anova_model='Rendimiento~C(presion_extrusion)+C(Lote_resina)')
res.anova_summary

def validar_precio():
    while True:
        try:
            precio = float(input("Ingrese el precio del certificado (entre 0 y 50000): "))
            if 0 <= precio <= 50000:
                return precio
            else:
                print("El precio debe estar entre 0 y 50000.")
        except ValueError:
            print("Por favor, ingrese un número válido.")

def validar_tipo_tramite():
    while True:
        try:
            tipo_tramite = int(input("Ingrese el tipo de trámite (1 - presencial, 2 - online): "))
            if tipo_tramite in [1, 2]:
                return tipo_tramite
            else:
                print("El tipo de trámite debe ser 1 (presencial) o 2 (online).")
        except ValueError:
            print("Por favor, ingrese 1 o 2 para el tipo de trámite.")

def validar_especificacion():
    while True:
        try:
            especificacion = int(input("Ingrese la especificación del certificado (1 - nacimiento, 2 - defunción, 3 - matrimonio): "))
            if especificacion in [1, 2, 3]:
                return especificacion
            else:
                print("La especificación debe ser 1 (nacimiento), 2 (defunción) o 3 (matrimonio).")
        except ValueError:
            print("Por favor, ingrese 1, 2 o 3 para la especificación.")

n = int(input("Ingrese el número de solicitudes de certificado: "))

for i in range(1, n + 1):
    print(f"Vuelta {i} del ciclo:")
    precio = validar_precio()
    tipo_tramite = validar_tipo_tramite()
    especificacion = validar_especificacion()

    print(f"Solicitud {i}: Precio: {precio}, Tipo de Trámite: {tipo_tramite}, Especificación: {especificacion}")

print("Proceso completado.")